cmdhistory=["(+ 1 2)" "(\u00B1 10 5)" "(+ 10 5)" "(/6 3)" "(/ 6 3)" "(+2 (+ 5 5))" "(+ 2 (+ 5 5))" "(+ 4 (+ 1 2))" "(+ 4 (+ 20 1)(- 7))" "(- 7 (+ 4 (+ 20 1)))" "(- (+ 4 (+ 20 1)) 7)" "(+ 4 (+ 20 1))(- 7)" "(def mult2 [x] (* x 2))" "(def mult2 [2] (* 2 2))" "(def mult2 [x] (* 2 2))" "(defn mult2 [6] (* x 6))" "(defn mult-square [x](* x (+ 2 x)))" "(mult-square 2)" "(mult-square 6)" "(defn pow3 [x](* x 2))" "(pow3 2)" "(defn pow4 [x]((* x 2)Math/pow4 x 2))" "(defn pow4 [x] (* x (Math/pow 2 x)))" "2" "(desn pow4 2)" "(defn pow4 2)" "(pow4 2)" "lein new app exercicio1" "(foo oi)" "(total-de-vidas)" "dsadsa" "lein repl" "(total-de-vidas)" "total-de-vidas" "(print \\"\u0178ou lost htegame\\")" "(lost)" "lost" "(game/core)" "(game/lost)" "game.core \=> (game.lost)" "(lost)" "(Hangman/lost)" "(hangman/lost)" "(game/lost)" "(game/game 8)" "(lost)" "(game 5)" "(10 \= 6 )" "(\= 10 6)" "(\= 20 20)" "(\= 15 15)" "(\!\= 15 14)" "(not\= 10 10)" "(not\= 10 20)" "(perdeu)" "(fib 3)" "(fib 10)" "(foo sdsds)" "(foo \\"sasas\\")" "(conjunto)" "conjunto" "(conjunto)" "(lista)" "lista" "(list/lista)" "(lista)" "list/lista" "lista" "(lost)" "(total-of-lifes)" "total-of-lifes" "lista" "total-of-lifes" "conjunto" "(mult 2)" "lista" "list/lista" "(mult 2)" "(lista)" "lista" "conjunto" "(conjunto)" "(contains? conjunto \\"A\\")" "(conj conjunto \\"D\\")" "conjunto" "(disj conjunto \\"A\\")" "conjunto" "\\n(map mult lista)" "(par lista)" "(remove par lista)" "(map mult lista)" "(par 2)" "(par 6)" "(par 5)" "(3)" "\\n(fn [3] (+ x 3))" "(fn (+ 3 3))" "lista" "(remove par lista)" "(triplica 4)" "(triplica 3)" "(soma 2)" "(soma2 )" "(soma 2 )" "(soma 2)" "(lista)" "lista" "som" "soma" "soma 2" "soma" "(* 3 x)" "(* 3 3)" "(defn soma [x] (+ x 3))" "(soma 4)" "(soma 3)" "(mult 2)" "lista" "(map mult lista)" "(par 6)" "conjunto" "(par 3)" "lista" "conjutno" "conjunto" "(soma 4)" "(triplica 4)" "(par 7)" "(par 6)" "(map triplica lista)" "(remove par lista)" "(game 5)" "(game 5 \\"MELANCIA\\" \#{\\"A\\" \\"B\\"})" "(letters-missing \\"MELANCIA\\" \#{\\"M\\" \\"A\\"})" "(letters-missing? \\"MELANCIA\\" \#{\\"M\\" \\"A\\"})" "(letters-missing? \\"MELANCIA\\" \#{\\"M\\" \\"A\\" \\"L\\"})" "(game 5 \\"JUNIOR\\" \#{\\"J\\"})" "(game 5 \\"JUNIOR\\" \#{\\"J\\" \\"A\\"})" "(game 5 \\"JUNIOR\\" \#{\\"J\\" \\"U\\" \\"N\\" \\"I\\" \\"O\\" \\"R\\"})" "(game 0 \\"JUNIOR\\" \#{\\"J\\"})" "(game 5 \\"JUNIOR\\" \#{\\"J\\" \\"U\\" \\"N\\" \\"I\\" \\"O\\" \\"R\\"})" "numeros" "carros" "(remove-impar 4)" "(remove-impar 3)" "(impar? 6)" "(impar? 5)" "(remove impar? lista)" "won" "(won)" "(game 5 \\"MEL\\" \\"A\\")" "(game 5 \\"MEL\\" \#{\\"A\\"})" "(game 5 \\"JUNIOR\\" \#{\\"K\\"})" "game 5 \\"JUNIOR\\" \#{\\"K\\" \\"J\\"})" "(game 5 \\"JUNIOR\\" \#{\\"J\\" \\"U\\"})" "(game 5 \\"MELANCIA\\" \#{\\"M\\" \\"A\\"})" "\\n(game 5 \\"MELANCIA\\" \#{\\"M\\" \\"E\\" \\"L\\" \\"A\\" \\"N\\" \\"C\\" \\"I\\" \\"A\\"})" "(game 5 \\"MELANCIA\\" \#{\\"M\\" \\"E\\" \\"L\\" \\"A\\" \\"N\\" \\"C\\" \\"I\\" \\"A\\"})" "(game 5 \\"MELANCIA\\" \#{\\"M\\" \\"L\\" \\"A\\" \\"N\\" \\"C\\" \\"I\\" \\"A\\"})" "(game 5 \\"MELANCIA\\" \#{\\"M\\"})" "(game 5 \\"OI\\" \#{\\"O\\" \\"I\\"})" "(game 5 \\"OI\\" \#{\\"O\\"})" "(game 5 \\"OI\\" \#{\\"O\\" \\"I\\"})" "(game 5 \\"OI\\" \#{\\"O\\"})" "(game 2 \\"JUNIOR\\" \#{})" "(game 5 \\"JUNIOR\\" \#{})" "(game 2 \\"JUNIOR\\" \#{})" "J" "(game 2 \\"JUNIOR\\" \#{})" "LISTA" "lista" "(ler-letra\!)" "s" "(* 7 (Integer/parseInt (ler-letra\!)))" "(converte-para-inteiro)" "(.contains lista \\"1\\")" "(.contains lista 1)" "(game 5 \\"JUNIOR\\" \#{})" "(game 2 \\"JUNIOR\\" \#{})" "E" "(fib 5)" "(fib 150)" "(fib 10)" "(fib 2)" "(fib 3)" "(fib 5)" "(fib 6)" "(sum 5)" "(fib 4)" "(soma 5)" "(fib 4)" "(soma 5)" "(fib 4)" "(fib 5)" "(game 3 \\"JUNIOR\\" \#{\\"\\"})" "(soma 3)" "(sum 5)" "(fib 5)" "(game 5 \\"JUNIOR\\" \#{\\"\\"})" "dasaasd\\nsa\\ndas" "(game 5 \\"JUNIOR\\" \#{\\"\\"})" "lein run" "run" "-main" "start-the-game" "s" "(game)" "(start-the-game)"]
eclipse.preferences.version=1
